<UserControl x:Class="TrireksaApp.Contents.Penjualan.Create"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TrireksaApp.Contents.Penjualan"
             xmlns:mui="http://firstfloorsoftware.com/ModernUI"
             xmlns:pay="clr-namespace:ModelsShared.Models"
             xmlns:mi="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:m="clr-namespace:TrireksaApp.Common"
             mc:Ignorable="d"  >
    <UserControl.Resources>
        <m:RadioButtonCheckConverter x:Key="RadioButtonCheckConverter"/>
        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="Margin" Value="5,1"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="130,1,10,0"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="130,1,10,0"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <StackPanel  Grid.ColumnSpan="3">
            <TextBlock Text="BUAT STT" Style="{StaticResource Heading2}" Margin="5"/>
            <StackPanel Margin="5" HorizontalAlignment="Right" Height="50" Style="{StaticResource OPanel}">
                <StackPanel.Resources>
                    <PathGeometry  x:Key="HomeIconData">F1 M 15.0021,35.0049L 15.0021,33.0046L 15.0021,24.2034L 14.002,25.0035L
                        12.0017,22.0031L 24.0033,13.0018L 29.004,16.7523L 29.004,14.002L 31.0043,13.502L 31.0043,18.2525L 36.005,22.0031L 34.0047,25.0035L 33.0046,24.2034L 33.0046,33.0046L 33.0046,35.0049L 15.0021,35.0049 Z M 24.0033,17.0024L 17.0024,22.6032L 17.0024,33.0046L 21.0029,33.0046L 21.0029,27.0038L 27.0038,27.0038L 27.0038,33.0046L 31.0043,33.0046L 31.0043,22.6032L 24.0033,17.0024 Z</PathGeometry>
                    <Style TargetType="mui:ModernButton">
                        <Setter Property="IconData" Value="{StaticResource HomeIconData}" />
                        <Setter Property="Margin" Value="0,0,8,0" />
                        <Setter Property="BorderThickness" Value="2" />
                    </Style>
                </StackPanel.Resources>
                <StackPanel.Background>
                    <SolidColorBrush Color="{DynamicResource AccentColor}" Opacity="0.015"/>
                </StackPanel.Background>
                <Label Content="STT/AWB"></Label>
                <TextBox KeyDown="SearchPress" Text="{Binding STT,StringFormat='D6',Mode=TwoWay,ValidatesOnDataErrors=True}" Height="40" Width="200" FontWeight="Bold" FontSize="16"></TextBox>
                <Button Height="40" Padding="3" Width="40" Command="{Binding Search}" CommandParameter="{Binding STT}" >
                    <mi:PackIcon Kind="FileFind" Width="30" Height="30" Margin="0" />
                </Button>
            </StackPanel>

        </StackPanel>
        <StackPanel Grid.Row="1" >
            <Grid Margin="10,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50*"/>
                    <ColumnDefinition Width="50*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Margin="5" Grid.Column="0" >
                    <StackPanel Margin="5">
                        <StackPanel.Background>
                            <SolidColorBrush Color="#FF898484" Opacity="0.1"/>
                        </StackPanel.Background>
                        <Grid>
                            <Label  Content="Sender" ></Label>
                            <ComboBox   Text="{Binding ShiperSearch}" ToolTip="{Binding ShiperToolTip }" IsEditable="True" KeyDown="AddShiper" 
                                        ItemsSource="{Binding Shipers}" SelectedItem="{Binding ShiperSelected}" DisplayMemberPath="Name" 
                                        SelectedValuePath="Id" SelectedValue="{Binding ShiperID,Mode=TwoWay,ValidatesOnDataErrors=True}"  ></ComboBox>
                        </Grid>
                        <Grid Height="70"  >
                            <TextBox Height="60" AcceptsReturn="True" IsEnabled="False"  Text="{Binding ShiperToolTip }" VerticalAlignment="Top"  ></TextBox>
                        </Grid>
                    </StackPanel>
                    <StackPanel Margin="5" >
                        <StackPanel.Background>
                            <SolidColorBrush Color="#FF898484" Opacity="0.1"/>
                        </StackPanel.Background>
                        <Grid  >
                            <Label  Content="Reciver"></Label>
                            <ComboBox Text="{Binding ReciverSearch}"  ToolTip="{Binding ReciverToolTip}" IsEditable="True" KeyDown="AddReciver" ItemsSource="{Binding Recivers}" SelectedItem="{Binding ReciverSelected}"  DisplayMemberPath="Name" SelectedValuePath="Id" SelectedValue="{Binding ReciverID,Mode=TwoWay,ValidatesOnDataErrors=True}"></ComboBox>
                        </Grid>
                        <Grid>
                            <TextBox Height="60" AcceptsReturn="True" IsEnabled="False"  Text="{Binding ReciverToolTip}" VerticalAlignment="Top"></TextBox>
                        </Grid>
                    </StackPanel>
                    <StackPanel Margin="3" Grid.Row="1" Grid.Column="0" >
                        <StackPanel.Background>
                            <SolidColorBrush Color="#FF898484" Opacity="0.1"/>
                        </StackPanel.Background>
                        <StackPanel Style="{StaticResource OPanel}" Height="28">
                            <Label  Width="118" Content="Payment Status"></Label>
                            <RadioButton Width="50" Content="CR" GroupName="PayType" IsChecked="{Binding PayTypeView,Converter={StaticResource RadioButtonCheckConverter},ConverterParameter={x:Static pay:PayType.Credit},ValidatesOnDataErrors=True}" ></RadioButton>
                            <RadioButton Width="50" Margin="10,0"  Content="COD" GroupName="PayType" IsChecked="{Binding PayTypeView,Converter={StaticResource RadioButtonCheckConverter},ConverterParameter={x:Static pay:PayType.COD},ValidatesOnDataErrors=True}" ></RadioButton>
                            <RadioButton   Content="CASH" GroupName="PayType" IsChecked="{Binding PayTypeView,Converter={StaticResource RadioButtonCheckConverter},ConverterParameter={x:Static pay:PayType.Chash},ValidatesOnDataErrors=True}" ></RadioButton>
                            </StackPanel>
                        <StackPanel Style="{StaticResource OPanel}" Height="28">
                            <Label  Width="118" Content="Will Pay"></Label>
                            <RadioButton Height="30"  Content="Shiper" GroupName="HowWillPay" IsChecked="{Binding CustomerIsPay,Converter={StaticResource RadioButtonCheckConverter},ConverterParameter={x:Static pay:CustomerIsPay.Shiper},ValidatesOnDataErrors=True}" Width="90" ></RadioButton>
                            <RadioButton Height="30"     Content="Reciver" GroupName="HowWillPay" IsChecked="{Binding CustomerIsPay,Converter={StaticResource RadioButtonCheckConverter},ConverterParameter={x:Static pay:CustomerIsPay.Reciver},ValidatesOnDataErrors=True}" Width="90"></RadioButton>
                            <RadioButton Height="30" Content="Other" GroupName="HowWillPay" IsChecked="{Binding CustomerIsPay,Converter={StaticResource RadioButtonCheckConverter},ConverterParameter={x:Static pay:CustomerIsPay.Other},ValidatesOnDataErrors=True}" Width="90"></RadioButton>
                        </StackPanel>
                        <Grid Visibility="{Binding OtherVisible}" >
                            <Label  Width="118" Content=""></Label>
                            <ComboBox Text="{Binding CustomerWillPaySearch}" IsEditable="True" ItemsSource="{Binding WillPays}" SelectedItem="{Binding WillPaySelected}"  DisplayMemberPath="Name" SelectedValuePath="Id" SelectedValue="{Binding CustomerIdIsPay,Mode=TwoWay,ValidatesOnDataErrors=True}"></ComboBox>
                        </Grid>
                            <Grid>
                            <Label HorizontalAlignment="Left"   Content="Type Of Weight"></Label>
                            <ComboBox   x:Name="cmbtype" Margin="130,0,30,0" ItemsSource="{Binding TypeOfWeights}" SelectedItem="{Binding TypeOfWeight,Mode=TwoWay,ValidatesOnDataErrors=True}">

                            </ComboBox>
                            <Button HorizontalAlignment="Right" Padding="0" Name="btnChange" Command="{Binding ChangeWeight}"  Margin="0,1,10,1">
                                <mi:PackIcon x:Name="changeIcon" Kind="Weight" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                            </Button>

                        </Grid>



                        <Grid>
                            <Label   Content="Via"></Label>
                            <ComboBox ItemsSource="{Binding PortTypes}" SelectedItem="{Binding PortTypeView,Mode=TwoWay,ValidatesOnDataErrors=True}" ></ComboBox>
                        </Grid>
                        <Grid>
                            <Label  Content="Price"></Label>
                            <TextBox Margin="130,1,30,1"  Text="{Binding Price,StringFormat='{}{0:N0}',Mode=TwoWay,ValidatesOnDataErrors=True}" ></TextBox>
                            <Button TabIndex="100" HorizontalAlignment="Right" Margin="2,1,10,1" Width="18" ToolTip="Sync Price" Padding="0" VerticalContentAlignment="Center"  Command="{Binding PriceUpdate}" >
                                <Grid Height="28" >
                                    <mi:PackIcon x:Name="priceIcon" Kind="Rotate3d" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                                        <mi:PackIcon.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=priceProgress,Path=IsActive}" Value="True">
                                                        <Setter Property="mi:PackIcon.Visibility" Value="Hidden"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </mi:PackIcon.Style>
                                    </mi:PackIcon>
                                    <mui:ModernProgressRing MinHeight="10" MinWidth="10" Name="priceProgress"  IsActive="{Binding PriceIsSync}"  Opacity="0.5" />
                                </Grid>
                            </Button>
                        </Grid>
                      
                    </StackPanel>
                </StackPanel>
                <StackPanel Margin="5" Grid.Column="1">

                    <StackPanel Margin="5" >
                        <StackPanel.Background>
                            <SolidColorBrush Color="#FF898484" Opacity="0.1"/>
                        </StackPanel.Background>
                        <Grid >
                            <Label   Content="Content"></Label>
                            <TextBox Height="38"  VerticalContentAlignment="Top" AcceptsReturn="True" Text="{Binding Content,ValidatesOnDataErrors=True}"   />
                        </Grid>
                        <Grid>
                            <Label   Content="DO"/>
                            <TextBox Height="38" VerticalContentAlignment="Top" AcceptsReturn="True" Text="{Binding DoNumber,ValidatesOnDataErrors=True}" VerticalAlignment="Stretch" />
                        </Grid>

                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="233*"/>
                                <ColumnDefinition Width="71*"/>
                            </Grid.ColumnDefinitions>
                            <Label VerticalAlignment="Top"  Content="Note" Margin="5,1,0,0"></Label>
                            <TextBox Height="55" ToolTip="{Binding Note}" AcceptsReturn="True" Text="{Binding Note,ValidatesOnDataErrors=True}" Grid.ColumnSpan="2"  />
                        </Grid>
                    </StackPanel>
                    <StackPanel Margin="5">
                        <StackPanel.Background>
                            <SolidColorBrush Color="#FF898484" Opacity="0.1"/>
                        </StackPanel.Background>
                        <StackPanel >
                            <Grid>
                                <Label  Content="Colly"  Width="118"></Label>
                                <TextBox  AcceptsReturn="True" IsEnabled="False"  Text="{Binding Pcs}" VerticalAlignment="Top" ></TextBox>
                            </Grid>
                            <Grid Height="Auto">
                                <Label Content="Weight" ></Label>
                                <TextBox   AcceptsReturn="True" IsEnabled="False"  Text="{Binding Weight}" VerticalAlignment="Top"></TextBox>
                            </Grid>
                            <Grid>
                                <Label Content="Packing Costs"></Label>
                                <TextBox Text="{Binding PackingCosts,StringFormat='{}{0:N0}',Mode=TwoWay,ValidatesOnDataErrors=True}"></TextBox>
                            </Grid>

                            <Grid>
                                <Label  Content="Etc"></Label>
                                <TextBox Text="{Binding Etc,StringFormat='{}{0:N0}',Mode=TwoWay,ValidatesOnDataErrors=True}"></TextBox>
                            </Grid>
                            <Grid>
                                <Label Content="Tax"></Label>
                                <WrapPanel>
                                    <TextBox Margin="130,1,0,1"  Text="{Binding Tax,Mode=TwoWay,ValidatesOnDataErrors=True}" Width="30"></TextBox>
                                    <Label HorizontalAlignment="Left" Content="%" Width="auto"></Label>
                                </WrapPanel>
                            </Grid>
                            <Grid>
                                <Label FontSize="14" Content="Total"></Label>
                                <TextBox FontSize="14" IsReadOnly="True" Text="{Binding Total,StringFormat='{}{0:N0}',UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}" />
                            </Grid>
                            <WrapPanel>
                                <Label Content="Create Date"></Label>
                                <DatePicker Margin="20,2,0,1" SelectedDate="{Binding ChangeDate,Mode=TwoWay,ValidatesOnDataErrors=True}" ></DatePicker>
                            </WrapPanel>
                        </StackPanel>
                    </StackPanel>

                </StackPanel>

            </Grid>

        </StackPanel>

        <StackPanel Grid.Row="2" Grid.ColumnSpan="3">
            <StackPanel Style="{StaticResource OPanel}"  HorizontalAlignment="Right" Height="52" Margin="10,5" >
                <Button  Command="{Binding Save}"  Margin="4" Content="Save" Width="80" ></Button>
                <Button Command="{Binding SaveAndPrint}"  Margin="4" Content="Save &amp; Print" Width="120" ></Button>
                <Button  Command="{Binding Print}" Margin="4" Content="Just Print" Width="100" ></Button>
                <Button Command="{Binding Cancel}" Margin="4" Content="Cancel" Width="80" ></Button>
            </StackPanel>
        </StackPanel>
    </Grid>

</UserControl>
